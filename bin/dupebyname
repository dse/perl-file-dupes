#!/usr/bin/env perl
use warnings;
use strict;
use open qw(locale);

use Getopt::Long;
use Scalar::Util qw(looks_like_number);

use FindBin;
use lib "${FindBin::Bin}/../lib";

use File::Dupes::Find::ByFilename qw(find_by_filename);
use File::Dupes::Find::Confirm qw(confirm_duplicates confirm_hard_links);
use File::Dupes::Find::Remove qw(remove_callback);

our $verbose = 0;
our $dry_run = 0;
our $test = 0;

Getopt::Long::Configure(qw(gnu_compat bundling no_ignore_case));
Getopt::Long::GetOptions(
    "v|verbose+" => \$verbose,
    "n|dry-run" => \$dry_run,
    "t|test" => \$test,
) or die("unknown option\n");

STDOUT->autoflush(1);
STDERR->autoflush(1);

my $min_size = 1048576;
if (scalar @ARGV && looks_like_number($ARGV[0])) {
    $min_size = shift(@ARGV);
}

die("not enough arguments\n") if scalar @ARGV < 1;
my (@dirnames) = @ARGV;

my $callback = \&remove_callback;

find_by_filename(@dirnames, {
    test => $test,
    verbose => $verbose,
    dry_run => $dry_run,
    callback => $callback,
    progress => 1,
    min_size => $min_size,
});
